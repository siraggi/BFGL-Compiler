
class MathBFGL begin
    dcl func roundUp(num numToBeRounded) begin
        return 0
    end

    dcl func abs(num value) begin
        return 0
      end

    dcl func roundDown(num numToBeRounded) begin
        return 0
    end

    dcl func round(num numToBeRounded) begin
        return 0
    end

    dcl func sqrt(num numToSqr) begin
        return 0
    end

    dcl func pwr(num howMuchToPower) begin
        return 0
    end

    dcl func getRandomNum(num upperBound) begin
        return 0
    end
end

class Game begin
    dcl num deltatime
    dcl text background

    dcl func SetBackground(text image) begin
        set background to image
    end

    dcl func GetSystemTime() begin

    end

    dcl num width
    dcl num height

    dcl list of Sprite Sprites
    dcl list of Label Labels

    dcl text pathToBackground

end

class Timer begin
    dcl num interval

    dcl func Start() begin

    end

    dcl func Stop() begin

    end

    dcl func Reset() begin

    end
end

class InputBFGL begin
    dcl Keyboard key to new Keyboard()
end

class Keyboard begin

        dcl Key ESCAPE to new Key()
        dcl Key num1 to new Key()
        dcl Key num2 to new Key()
        dcl Key num3 to new Key()
        dcl Key num4 to new Key()
        dcl Key num5 to new Key()
        dcl Key num6 to new Key()
        dcl Key num7 to new Key()
        dcl Key num8 to new Key()
        dcl Key num9 to new Key()
        dcl Key num0 to new Key()
        dcl Key BACK to new Key()
        dcl Key TAB to new Key()
        dcl Key Q to new Key()
        dcl Key W to new Key()
        dcl Key E to new Key()
        dcl Key R to new Key()
        dcl Key T to new Key()
        dcl Key Y to new Key()
        dcl Key U to new Key()
        dcl Key I to new Key()
        dcl Key O to new Key()
        dcl Key P to new Key()
        dcl Key RETURN to new Key()
        dcl Key LCONTROL to new Key()
        dcl Key A to new Key()
        dcl Key S to new Key()
        dcl Key D to new Key()
        dcl Key F to new Key()
        dcl Key G to new Key()
        dcl Key H to new Key()
        dcl Key J to new Key()
        dcl Key K to new Key()
        dcl Key LSHIFT to new Key()
        dcl Key Z to new Key()
        dcl Key X to new Key()
        dcl Key C to new Key()
        dcl Key V to new Key()
        dcl Key B to new Key()
        dcl Key N to new Key()
        dcl Key M to new Key()
        dcl Key COMMA to new Key()
        dcl Key PERIOD to new Key()
        dcl Key SLASH to new Key()
        dcl Key RSHIFT to new Key()
        dcl Key MULTIPLY to new Key()
        dcl Key LALT to new Key()
        dcl Key SPACE to new Key()
        dcl Key F1 to new Key()
        dcl Key F2 to new Key()
        dcl Key F3 to new Key()
        dcl Key F4 to new Key()
        dcl Key F5 to new Key()
        dcl Key F6 to new Key()
        dcl Key F7 to new Key()
        dcl Key F8 to new Key()
        dcl Key F9 to new Key()
        dcl Key F10 to new Key()
        dcl Key NUMLOCK to new Key()
        dcl Key SCROLL to new Key()
        dcl Key NUMPAD7 to new Key()
        dcl Key NUMPAD8 to new Key()
        dcl Key NUMPAD9 to new Key()
        dcl Key SUBTRACT to new Key()
        dcl Key NUMPAD4 to new Key()
        dcl Key NUMPAD5 to new Key()
        dcl Key NUMPAD6 to new Key()
        dcl Key ADD to new Key()
        dcl Key NUMPAD1 to new Key()
        dcl Key NUMPAD2 to new Key()
        dcl Key NUMPAD3 to new Key()
        dcl Key NUMPAD0 to new Key()
        dcl Key DECIMAL to new Key()
        dcl Key F11 to new Key()
        dcl Key F12 to new Key()
        dcl Key RCONTROL to new Key()
        dcl Key PAUSE to new Key()
        dcl Key HOME to new Key()
        dcl Key UP to new Key()
        dcl Key LEFT to new Key()
        dcl Key RIGHT to new Key()
        dcl Key END to new Key()
        dcl Key DOWN to new Key()
        dcl Key INSERT to new Key()
        dcl Key DELETE to new Key()
        dcl Key LWIN to new Key()
        dcl Key RWIN to new Key()

end

class Key begin
    dcl bool isPressed
    dcl bool isDown
end

class Sprite is Object begin
    dcl num posX
    dcl num posY
    dcl num sizeX
    dcl num sizeY
    dcl text id
    dcl text texture

    OnConstruct(num xx, num yy, num sizeXX, num sizeYY, text ID) do
        set posX to xx
        set posY to yy
        set sizeX to sizeXX
        set sizeY to sizeYY
        set id to ID
    end

    dcl func update(num delta) begin

    end

    dcl func collision(Sprite other) begin

    end

    dcl func GetCenter() begin
      dcl Vector center to new Vector(0,0)
      center.SetX(posX+(sizeX/2))
      center.SetY(posY+(sizeY/2))
      return center
    end
end

class Label is Object begin
    dcl num posX
    dcl num posY
    dcl text textToWrite

    OnConstruct(text t, num xx, num yy) do
        set posX to xx
        set posY to yy
        set textToWrite to t
        game.Labels.add(this)
    end


    dcl func update(num delta) begin

    end

    dcl func updateText(text t) begin
        game.Labels.remove(this)
        set textToWrite to t
        game.Labels.add(this)
    end

    dcl func draw() begin
        game.Labels.add(this)
    end

    dcl func remove() begin
        game.Labels.remove(this)
    end

end

class Object begin

end

class List begin
    dcl func size() begin
        return 0
    end

    dcl func add(Object o) begin

    end

    dcl func remove(Object o) begin

    end

    dcl func size() begin

    end

    dcl func get(num index) begin

    end
end

class Vector begin
    dcl num x
    dcl num y

  OnConstruct(num dclx, num dcly) do
    set x to dclx
    set y to dcly
  end

  dcl func SetX(num value) begin
    set x to value
  end

  dcl func SetY(num value) begin
    set y to value
  end

  dcl func Normelise() begin
    dcl num temp to math.abs(x) + math.abs(y)
    set x to x / temp
    set y to y / temp
  end

  dcl func DirVector(Vector point) begin
    dcl Vector temp to new Vector(x - point.x, y - point.y)
    return temp
  end

  dcl func MultiVector(num amount) begin
    set x to x*amount
    set y to y*amount
  end
end